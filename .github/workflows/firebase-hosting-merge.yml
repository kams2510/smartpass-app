# This optimized file uses a matrix strategy for parallel execution and easier maintenance.

name: Deploy all apps to Firebase Hosting on merge

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-app:
    runs-on: ubuntu-latest
    # Define a matrix to run a parallel job for each application
    strategy:
      matrix:
        app: [admin-dashboard, conductor-app, student-portal]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and cache dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # Enable caching to speed up dependency installation on subsequent runs
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install root dependencies
        # This step runs only if a package-lock.json exists in the root
        if: hashFiles('package-lock.json') != ''
        run: npm ci

      - name: Build ${{ matrix.app }}
        # Installs dependencies and builds the specific app from the matrix
        run: npm ci --prefix ${{ matrix.app }} && npm run build --prefix ${{ matrix.app }}

      - name: Deploy ${{ matrix.app }} to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_SMARTPASS_APP_48365 }}'
          projectId: smartpass-app-48365
          # The target is now dynamic, using the app name from the matrix
          target: ${{ matrix.app }}
          channelId: live